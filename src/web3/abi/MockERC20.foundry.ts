export const foundry = {
  abi: [
    {
      type: 'constructor',
      inputs: [
        {
          name: 'name',
          type: 'string',
          internalType: 'string',
        },
        {
          name: 'symbol',
          type: 'string',
          internalType: 'string',
        },
      ],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      name: 'DOMAIN_SEPARATOR',
      inputs: [],
      outputs: [
        {
          name: '',
          type: 'bytes32',
          internalType: 'bytes32',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'PERMIT_TYPEHASH',
      inputs: [],
      outputs: [
        {
          name: '',
          type: 'bytes32',
          internalType: 'bytes32',
        },
      ],
      stateMutability: 'pure',
    },
    {
      type: 'function',
      name: 'allowance',
      inputs: [
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
      ],
      outputs: [
        {
          name: '',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'approve',
      inputs: [
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'value',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      outputs: [
        {
          name: '',
          type: 'bool',
          internalType: 'bool',
        },
      ],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      name: 'balanceOf',
      inputs: [
        {
          name: 'account',
          type: 'address',
          internalType: 'address',
        },
      ],
      outputs: [
        {
          name: '',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'decimals',
      inputs: [],
      outputs: [
        {
          name: '',
          type: 'uint8',
          internalType: 'uint8',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'eip712Domain',
      inputs: [],
      outputs: [
        {
          name: 'fields',
          type: 'bytes1',
          internalType: 'bytes1',
        },
        {
          name: 'name',
          type: 'string',
          internalType: 'string',
        },
        {
          name: 'version',
          type: 'string',
          internalType: 'string',
        },
        {
          name: 'chainId',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'verifyingContract',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'salt',
          type: 'bytes32',
          internalType: 'bytes32',
        },
        {
          name: 'extensions',
          type: 'uint256[]',
          internalType: 'uint256[]',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'mint',
      inputs: [
        {
          name: 'to',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'amount',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      name: 'name',
      inputs: [],
      outputs: [
        {
          name: '',
          type: 'string',
          internalType: 'string',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'nonces',
      inputs: [
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
      ],
      outputs: [
        {
          name: '',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'permit',
      inputs: [
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'value',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'deadline',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'v',
          type: 'uint8',
          internalType: 'uint8',
        },
        {
          name: 'r',
          type: 'bytes32',
          internalType: 'bytes32',
        },
        {
          name: 's',
          type: 'bytes32',
          internalType: 'bytes32',
        },
      ],
      outputs: [],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      name: 'symbol',
      inputs: [],
      outputs: [
        {
          name: '',
          type: 'string',
          internalType: 'string',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'totalSupply',
      inputs: [],
      outputs: [
        {
          name: '',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      stateMutability: 'view',
    },
    {
      type: 'function',
      name: 'transfer',
      inputs: [
        {
          name: 'to',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'value',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      outputs: [
        {
          name: '',
          type: 'bool',
          internalType: 'bool',
        },
      ],
      stateMutability: 'nonpayable',
    },
    {
      type: 'function',
      name: 'transferFrom',
      inputs: [
        {
          name: 'from',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'to',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'value',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
      outputs: [
        {
          name: '',
          type: 'bool',
          internalType: 'bool',
        },
      ],
      stateMutability: 'nonpayable',
    },
    {
      type: 'event',
      name: 'Approval',
      inputs: [
        {
          name: 'owner',
          type: 'address',
          indexed: true,
          internalType: 'address',
        },
        {
          name: 'spender',
          type: 'address',
          indexed: true,
          internalType: 'address',
        },
        {
          name: 'value',
          type: 'uint256',
          indexed: false,
          internalType: 'uint256',
        },
      ],
      anonymous: false,
    },
    {
      type: 'event',
      name: 'EIP712DomainChanged',
      inputs: [],
      anonymous: false,
    },
    {
      type: 'event',
      name: 'Transfer',
      inputs: [
        {
          name: 'from',
          type: 'address',
          indexed: true,
          internalType: 'address',
        },
        {
          name: 'to',
          type: 'address',
          indexed: true,
          internalType: 'address',
        },
        {
          name: 'value',
          type: 'uint256',
          indexed: false,
          internalType: 'uint256',
        },
      ],
      anonymous: false,
    },
    {
      type: 'error',
      name: 'ECDSAInvalidSignature',
      inputs: [],
    },
    {
      type: 'error',
      name: 'ECDSAInvalidSignatureLength',
      inputs: [
        {
          name: 'length',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
    {
      type: 'error',
      name: 'ECDSAInvalidSignatureS',
      inputs: [
        {
          name: 's',
          type: 'bytes32',
          internalType: 'bytes32',
        },
      ],
    },
    {
      type: 'error',
      name: 'ERC20InsufficientAllowance',
      inputs: [
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'allowance',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'needed',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
    {
      type: 'error',
      name: 'ERC20InsufficientBalance',
      inputs: [
        {
          name: 'sender',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'balance',
          type: 'uint256',
          internalType: 'uint256',
        },
        {
          name: 'needed',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
    {
      type: 'error',
      name: 'ERC20InvalidApprover',
      inputs: [
        {
          name: 'approver',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
    {
      type: 'error',
      name: 'ERC20InvalidReceiver',
      inputs: [
        {
          name: 'receiver',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
    {
      type: 'error',
      name: 'ERC20InvalidSender',
      inputs: [
        {
          name: 'sender',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
    {
      type: 'error',
      name: 'ERC20InvalidSpender',
      inputs: [
        {
          name: 'spender',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
    {
      type: 'error',
      name: 'ERC2612ExpiredSignature',
      inputs: [
        {
          name: 'deadline',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
    {
      type: 'error',
      name: 'ERC2612InvalidSigner',
      inputs: [
        {
          name: 'signer',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'owner',
          type: 'address',
          internalType: 'address',
        },
      ],
    },
    {
      type: 'error',
      name: 'InvalidAccountNonce',
      inputs: [
        {
          name: 'account',
          type: 'address',
          internalType: 'address',
        },
        {
          name: 'currentNonce',
          type: 'uint256',
          internalType: 'uint256',
        },
      ],
    },
    {
      type: 'error',
      name: 'InvalidShortString',
      inputs: [],
    },
    {
      type: 'error',
      name: 'StringTooLong',
      inputs: [
        {
          name: 'str',
          type: 'string',
          internalType: 'string',
        },
      ],
    },
  ],
  bytecode: {
    object:
      '',
    sourceMap:
      '163:418:172:-:0;;;210:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:148;;;;;;;;;;;;-1:-1:-1;;;3328:431:148;;;;296:4:172;;;;;276:6;1667:5:123;:13;296:4:172;1667:5:123;:13;:::i;:::-;-1:-1:-1;1690:7:123;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;3401:45:148;;-1:-1:-1;3401:4:148;;-1:-1:-1;3432:13:148;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;4486:25:175;4527:18;;;4520:34;;;;4570:18;;;4563:34;4255:13:148;4613:18:175;;;4606:34;4278:4:148;4656:19:175;;;4649:61;4168:7:148;;4458:19:175;;4204:80:148;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:148;3725:27;;-1:-1:-1;163:418:172;;-1:-1:-1;;163:418:172;2887:340:143;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:143;;-1:-1:-1;3006:215:143;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:143;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:143:o;14:127:175:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:175;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:175;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:175;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:175:o;1105:562::-;1204:6;1212;1265:2;1253:9;1244:7;1240:23;1236:32;1233:52;;;1281:1;1278;1271:12;1233:52;1308:16;;-1:-1:-1;;;;;1373:14:175;;;1370:34;;;1400:1;1397;1390:12;1370:34;1423:61;1476:7;1467:6;1456:9;1452:22;1423:61;:::i;:::-;1413:71;;1530:2;1519:9;1515:18;1509:25;1493:41;;1559:2;1549:8;1546:16;1543:36;;;1575:1;1572;1565:12;1543:36;;1598:63;1653:7;1642:8;1631:9;1627:24;1598:63;:::i;:::-;1588:73;;;1105:562;;;;;:::o;1672:380::-;1751:1;1747:12;;;;1794;;;1815:61;;1869:4;1861:6;1857:17;1847:27;;1815:61;1922:2;1914:6;1911:14;1891:18;1888:38;1885:161;;1968:10;1963:3;1959:20;1956:1;1949:31;2003:4;2000:1;1993:15;2031:4;2028:1;2021:15;1885:161;;1672:380;;;:::o;2183:518::-;2285:2;2280:3;2277:11;2274:421;;;2321:5;2318:1;2311:16;2365:4;2362:1;2352:18;2435:2;2423:10;2419:19;2416:1;2412:27;2406:4;2402:38;2471:4;2459:10;2456:20;2453:47;;;-1:-1:-1;2494:4:175;2453:47;2549:2;2544:3;2540:12;2537:1;2533:20;2527:4;2523:31;2513:41;;2604:81;2622:2;2615:5;2612:13;2604:81;;;2681:1;2667:16;;2648:1;2637:13;2604:81;;;2608:3;;2274:421;2183:518;;;:::o;2877:1345::-;2997:10;;-1:-1:-1;;;;;3019:30:175;;3016:56;;;3052:18;;:::i;:::-;3081:97;3171:6;3131:38;3163:4;3157:11;3131:38;:::i;:::-;3125:4;3081:97;:::i;:::-;3233:4;;3290:2;3279:14;;3307:1;3302:663;;;;4009:1;4026:6;4023:89;;;-1:-1:-1;4078:19:175;;;4072:26;4023:89;-1:-1:-1;;2834:1:175;2830:11;;;2826:24;2822:29;2812:40;2858:1;2854:11;;;2809:57;4125:81;;3272:944;;3302:663;2130:1;2123:14;;;2167:4;2154:18;;-1:-1:-1;;3338:20:175;;;3456:236;3470:7;3467:1;3464:14;3456:236;;;3559:19;;;3553:26;3538:42;;3651:27;;;;3619:1;3607:14;;;;3486:19;;3456:236;;;3460:3;3720:6;3711:7;3708:19;3705:201;;;3781:19;;;3775:26;-1:-1:-1;;3864:1:175;3860:14;;;3876:3;3856:24;3852:37;3848:42;3833:58;3818:74;;3705:201;;;3952:1;3943:6;3940:1;3936:14;3932:22;3926:4;3919:36;3272:944;;;;;2877:1345;;:::o;4721:396::-;4870:2;4859:9;4852:21;4833:4;4902:6;4896:13;4945:6;4940:2;4929:9;4925:18;4918:34;4961:79;5033:6;5028:2;5017:9;5013:18;5008:2;5000:6;4996:15;4961:79;:::i;:::-;5101:2;5080:15;-1:-1:-1;;5076:29:175;5061:45;;;;5108:2;5057:54;;4721:396;-1:-1:-1;;4721:396:175:o;5122:297::-;5240:12;;5287:4;5276:16;;;5270:23;;5240:12;5305:16;;5302:111;;;-1:-1:-1;;5379:4:175;5375:17;;;;5372:1;5368:25;5364:38;5353:50;;5122:297;-1:-1:-1;5122:297:175:o;:::-;163:418:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;',
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      '0x608060405234801561000f575f80fd5b50600436106100f0575f3560e01c806340c10f191161009357806395d89b411161006357806395d89b4114610202578063a9059cbb1461020a578063d505accf1461021d578063dd62ed3e14610230575f80fd5b806340c10f191461019757806370a08231146101ac5780637ecebe00146101d457806384b0196e146101e7575f80fd5b806323b872dd116100ce57806323b872dd1461014757806330adf81f1461015a578063313ce567146101805780633644e5151461018f575f80fd5b806306fdde03146100f4578063095ea7b31461011257806318160ddd14610135575b5f80fd5b6100fc610268565b6040516101099190610cc8565b60405180910390f35b610125610120366004610cfc565b6102f8565b6040519015158152602001610109565b6002545b604051908152602001610109565b610125610155366004610d24565b610311565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610139565b60405160128152602001610109565b610139610334565b6101aa6101a5366004610cfc565b610342565b005b6101396101ba366004610d5d565b6001600160a01b03165f9081526020819052604090205490565b6101396101e2366004610d5d565b610350565b6101ef61036d565b6040516101099796959493929190610d76565b6100fc6103af565b610125610218366004610cfc565b6103be565b6101aa61022b366004610e0d565b6103cb565b61013961023e366004610e7a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60606003805461027790610eab565b80601f01602080910402602001604051908101604052809291908181526020018280546102a390610eab565b80156102ee5780601f106102c5576101008083540402835291602001916102ee565b820191905f5260205f20905b8154815290600101906020018083116102d157829003601f168201915b5050505050905090565b5f33610305818585610506565b60019150505b92915050565b5f3361031e858285610518565b610329858585610594565b506001949350505050565b5f61033d6105f1565b905090565b61034c828261071a565b5050565b6001600160a01b0381165f9081526007602052604081205461030b565b5f6060805f805f606061037e61074e565b61038661077b565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461027790610eab565b5f33610305818585610594565b834211156103f45760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861043f8c6001600160a01b03165f90815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f610499826107a8565b90505f6104a8828787876107d4565b9050896001600160a01b0316816001600160a01b0316146104ef576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016103eb565b6104fa8a8a8a610506565b50505050505050505050565b6105138383836001610800565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561058e578181101561058057604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103eb565b61058e84848484035f610800565b50505050565b6001600160a01b0383166105bd57604051634b637e8f60e11b81525f60048201526024016103eb565b6001600160a01b0382166105e65760405163ec442f0560e01b81525f60048201526024016103eb565b6105138383836108d2565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561064957507f000000000000000000000000000000000000000000000000000000000000000046145b1561067357507f000000000000000000000000000000000000000000000000000000000000000090565b61033d604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166107435760405163ec442f0560e01b81525f60048201526024016103eb565b61034c5f83836108d2565b606061033d7f000000000000000000000000000000000000000000000000000000000000000060056109f8565b606061033d7f000000000000000000000000000000000000000000000000000000000000000060066109f8565b5f61030b6107b46105f1565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f806107e488888888610aa1565b9250925092506107f48282610b69565b50909695505050505050565b6001600160a01b0384166108295760405163e602df0560e01b81525f60048201526024016103eb565b6001600160a01b03831661085257604051634a1406b160e11b81525f60048201526024016103eb565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561058e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108c491815260200190565b60405180910390a350505050565b6001600160a01b0383166108fc578060025f8282546108f19190610ee3565b9091555061096c9050565b6001600160a01b0383165f908152602081905260409020548181101561094e5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103eb565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610988576002805482900390556109a6565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109eb91815260200190565b60405180910390a3505050565b606060ff8314610a1257610a0b83610c21565b905061030b565b818054610a1e90610eab565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4a90610eab565b8015610a955780601f10610a6c57610100808354040283529160200191610a95565b820191905f5260205f20905b815481529060010190602001808311610a7857829003601f168201915b5050505050905061030b565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610ada57505f91506003905082610b5f565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610b2b573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610b5657505f925060019150829050610b5f565b92505f91508190505b9450945094915050565b5f826003811115610b7c57610b7c610f02565b03610b85575050565b6001826003811115610b9957610b99610f02565b03610bb75760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610bcb57610bcb610f02565b03610bec5760405163fce698f760e01b8152600481018290526024016103eb565b6003826003811115610c0057610c00610f02565b0361034c576040516335e2f38360e21b8152600481018290526024016103eb565b60605f610c2d83610c5e565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f60ff8216601f81111561030b57604051632cd44ac360e21b815260040160405180910390fd5b5f81518084525f5b81811015610ca957602081850181015186830182015201610c8d565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610cda6020830184610c85565b9392505050565b80356001600160a01b0381168114610cf7575f80fd5b919050565b5f8060408385031215610d0d575f80fd5b610d1683610ce1565b946020939093013593505050565b5f805f60608486031215610d36575f80fd5b610d3f84610ce1565b9250610d4d60208501610ce1565b9150604084013590509250925092565b5f60208284031215610d6d575f80fd5b610cda82610ce1565b60ff60f81b881681525f602060e06020840152610d9660e084018a610c85565b8381036040850152610da8818a610c85565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b81811015610dfb57835183529284019291840191600101610ddf565b50909c9b505050505050505050505050565b5f805f805f805f60e0888a031215610e23575f80fd5b610e2c88610ce1565b9650610e3a60208901610ce1565b95506040880135945060608801359350608088013560ff81168114610e5d575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f8060408385031215610e8b575f80fd5b610e9483610ce1565b9150610ea260208401610ce1565b90509250929050565b600181811c90821680610ebf57607f821691505b602082108103610edd57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561030b57634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52602160045260245ffdfea164736f6c6343000818000a',
    sourceMap:
      '163:418:172:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:123;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:175;;1262:22;1244:41;;1232:2;1217:18;3998:186:123;1104:187:175;2849:97:123;2927:12;;2849:97;;;1442:25:175;;;1430:2;1415:18;2849:97:123;1296:177:175;4776:244:123;;;;;;:::i;:::-;;:::i;401:178:172:-;477:95;401:178;;2707:82:123;;;2780:2;2135:36:175;;2123:2;2108:18;2707:82:123;1993:184:175;2659:112:125;;;:::i;310:85:172:-;;;;;;:::i;:::-;;:::i;:::-;;3004:116:123;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:123;3069:7;3095:18;;;;;;;;;;;;3004:116;2409:143:125;;;;;;:::i;:::-;;:::i;5144:557:148:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1981:93:123:-;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;1683:672:125:-;;;;;;:::i;:::-;;:::i;3551:140:123:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:123;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:138;4125:31:123;735:10:138;4141:7:123;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:138;4919:37:123;4935:4;735:10:138;4950:5:123;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:123;;4776:244;-1:-1:-1;;;;4776:244:123:o;2659:112:125:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;310:85:172:-;371:17;377:2;381:6;371:5;:17::i;:::-;310:85;;:::o;2409:143:125:-;-1:-1:-1;;;;;624:14:139;;2500:7:125;624:14:139;;;:7;:14;;;;;;2526:19:125;538:107:139;5144:557:148;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:148;;;-1:-1:-1;5482:212:148;;-1:-1:-1;5590:13:148;;-1:-1:-1;5625:4:148;;-1:-1:-1;5652:1:148;-1:-1:-1;5668:16:148;-1:-1:-1;5482:212:148;-1:-1:-1;5144:557:148:o;1981:93:123:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:138;3438:27:123;735:10:138;3455:2:123;3459:5;3438:9;:27::i;1683:672:125:-;1904:8;1886:15;:26;1882:97;;;1935:33;;-1:-1:-1;;;1935:33:125;;;;;1442:25:175;;;1415:18;;1935:33:125;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:139;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:125;2020:78;;;;;;5404:25:175;;;;-1:-1:-1;;;;;5503:15:175;;;5483:18;;;5476:43;5555:15;;;;5535:18;;;5528:43;5587:18;;;5580:34;5630:19;;;5623:35;5674:19;;;5667:35;;;5376:19;;2020:78:125;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:125;:6;-1:-1:-1;;;;;2223:15:125;;2219:88;;2261:35;;-1:-1:-1;;;2261:35:125;;-1:-1:-1;;;;;5943:15:175;;;2261:35:125;;;5925:34:175;5995:15;;5975:18;;;5968:43;5860:18;;2261:35:125;5713:304:175;2219:88:125;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;8726:128:123:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:123;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:123;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:123;;-1:-1:-1;;;;;6242:32:175;;10687:60:123;;;6224:51:175;6291:18;;;6284:34;;;6334:18;;;6327:34;;;6197:18;;10687:60:123;6022:345:175;10632:130:123;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:123;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:123;;5544:1;5517:30;;;6518:51:175;6491:18;;5517:30:123;6372:203:175;5472:86:123;-1:-1:-1;;;;;5571:16:123;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:123;;5639:1;5610:32;;;6518:51:175;6491:18;;5610:32:123;6372:203:175;5567:86:123;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;3845:262:148:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:148;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:148;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;7066:25:175;4226:11:148;7107:18:175;;;7100:34;;;;4239:14:148;7150:18:175;;;7143:34;4255:13:148;7193:18:175;;;7186:34;4278:4:148;7236:19:175;;;7229:61;4168:7:148;;7038:19:175;;4204:80:148;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;7458:208:123;-1:-1:-1;;;;;7528:21:123;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:123;;7601:1;7572:32;;;6518:51:175;6491:18;;7572:32:123;6372:203:175;7524:91:123;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;6021:126:148:-;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;4917:176::-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3501:4:149;3495:11;-1:-1:-1;;;3519:23:149;;3571:4;3562:14;;3555:39;;;;3623:4;3614:14;;3607:34;3679:4;3664:20;;;3326:374;6887:260:147;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:147;;6887:260;-1:-1:-1;;;;;;6887:260:147:o;9701:432:123:-;-1:-1:-1;;;;;9813:19:123;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:123;;9884:1;9855:32;;;6518:51:175;6491:18;;9855:32:123;6372:203:175;9809:89:123;-1:-1:-1;;;;;9911:21:123;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:123;;9983:1;9955:31;;;6518:51:175;6491:18;;9955:31:123;6372:203:175;9907:90:123;-1:-1:-1;;;;;10006:18:123;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:123;10094:5;-1:-1:-1;;;;;10085:31:123;;10110:5;10085:31;;;;1442:25:175;;1430:2;1415:18;;1296:177;10085:31:123;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:123;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:123;;-1:-1:-1;6093:540:123;;-1:-1:-1;;;;;6307:15:123;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:123;;-1:-1:-1;;;;;6242:32:175;;6386:50:123;;;6224:51:175;6291:18;;;6284:34;;;6334:18;;;6327:34;;;6197:18;;6386:50:123;6022:345:175;6336:115:123;-1:-1:-1;;;;;6571:15:123;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:123;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:123;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:123;7092:4;-1:-1:-1;;;;;7083:25:123;;7102:5;7083:25;;;;1442::175;;1430:2;1415:18;;1296:177;7083:25:123;;;;;;;;6008:1107;;;:::o;3358:267:143:-;3452:13;1390:66;3481:46;;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:147;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:147;;-1:-1:-1;6385:30:147;;-1:-1:-1;6417:1:147;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;7528:25:175;;;7601:4;7589:17;;7569:18;;;7562:45;;;;7623:18;;;7616:34;;;7666:18;;;7659:34;;;6541:24:147;;7500:19:175;;6541:24:147;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:147;;-1:-1:-1;;6541:24:147;;;-1:-1:-1;;;;;;;6579:20:147;;6575:113;;-1:-1:-1;6631:1:147;;-1:-1:-1;6635:29:147;;-1:-1:-1;6631:1:147;;-1:-1:-1;6615:62:147;;6575:113;6706:6;-1:-1:-1;6714:20:147;;-1:-1:-1;6714:20:147;;-1:-1:-1;5203:1551:147;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:147;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:147;;;;;1442:25:175;;;1415:18;;7634:46:147;1296:177:175;7563:243:147;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:147;;;;;1442:25:175;;;1415:18;;7763:32:147;1296:177:175;2078:378:143;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:143;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:143;;;-1:-1:-1;2408:4:143;2399:14;;2392:28;;;;-1:-1:-1;2363:16:143;2078:378::o;2528:245::-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:143;;;;;;;;;;;14:423:175;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:175:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:175;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:175:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2182:186::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;2333:29;2352:9;2333:29;:::i;2373:1259::-;2779:3;2774;2770:13;2762:6;2758:26;2747:9;2740:45;2721:4;2804:2;2842:3;2837:2;2826:9;2822:18;2815:31;2869:46;2910:3;2899:9;2895:19;2887:6;2869:46;:::i;:::-;2963:9;2955:6;2951:22;2946:2;2935:9;2931:18;2924:50;2997:33;3023:6;3015;2997:33;:::i;:::-;3061:2;3046:18;;3039:34;;;-1:-1:-1;;;;;3110:32:175;;3104:3;3089:19;;3082:61;3130:3;3159:19;;3152:35;;;3224:22;;;3218:3;3203:19;;3196:51;3296:13;;3318:22;;;3368:2;3394:15;;;;-1:-1:-1;3356:15:175;;;;-1:-1:-1;3437:169:175;3451:6;3448:1;3445:13;3437:169;;;3512:13;;3500:26;;3581:15;;;;3546:12;;;;3473:1;3466:9;3437:169;;;-1:-1:-1;3623:3:175;;2373:1259;-1:-1:-1;;;;;;;;;;;;2373:1259:175:o;3637:693::-;3748:6;3756;3764;3772;3780;3788;3796;3849:3;3837:9;3828:7;3824:23;3820:33;3817:53;;;3866:1;3863;3856:12;3817:53;3889:29;3908:9;3889:29;:::i;:::-;3879:39;;3937:38;3971:2;3960:9;3956:18;3937:38;:::i;:::-;3927:48;;4022:2;4011:9;4007:18;3994:32;3984:42;;4073:2;4062:9;4058:18;4045:32;4035:42;;4127:3;4116:9;4112:19;4099:33;4172:4;4165:5;4161:16;4154:5;4151:27;4141:55;;4192:1;4189;4182:12;4141:55;3637:693;;;;-1:-1:-1;3637:693:175;;;;4215:5;4267:3;4252:19;;4239:33;;-1:-1:-1;4319:3:175;4304:19;;;4291:33;;3637:693;-1:-1:-1;;3637:693:175:o;4335:260::-;4403:6;4411;4464:2;4452:9;4443:7;4439:23;4435:32;4432:52;;;4480:1;4477;4470:12;4432:52;4503:29;4522:9;4503:29;:::i;:::-;4493:39;;4551:38;4585:2;4574:9;4570:18;4551:38;:::i;:::-;4541:48;;4335:260;;;;;:::o;4600:380::-;4679:1;4675:12;;;;4722;;;4743:61;;4797:4;4789:6;4785:17;4775:27;;4743:61;4850:2;4842:6;4839:14;4819:18;4816:38;4813:161;;4896:10;4891:3;4887:20;4884:1;4877:31;4931:4;4928:1;4921:15;4959:4;4956:1;4949:15;4813:161;;4600:380;;;:::o;6580:222::-;6645:9;;;6666:10;;;6663:133;;;6718:10;6713:3;6709:20;6706:1;6699:31;6753:4;6750:1;6743:15;6781:4;6778:1;6771:15;7704:127;7765:10;7760:3;7756:20;7753:1;7746:31;7796:4;7793:1;7786:15;7820:4;7817:1;7810:15',
    linkReferences: {},
    immutableReferences: {
      '73458': [
        {
          start: 1617,
          length: 32,
        },
      ],
      '73460': [
        {
          start: 1575,
          length: 32,
        },
      ],
      '73462': [
        {
          start: 1533,
          length: 32,
        },
      ],
      '73464': [
        {
          start: 1698,
          length: 32,
        },
      ],
      '73466': [
        {
          start: 1738,
          length: 32,
        },
      ],
      '73469': [
        {
          start: 1877,
          length: 32,
        },
      ],
      '73472': [
        {
          start: 1922,
          length: 32,
        },
      ],
    },
  },
  methodIdentifiers: {
    'DOMAIN_SEPARATOR()': '3644e515',
    'PERMIT_TYPEHASH()': '30adf81f',
    'allowance(address,address)': 'dd62ed3e',
    'approve(address,uint256)': '095ea7b3',
    'balanceOf(address)': '70a08231',
    'decimals()': '313ce567',
    'eip712Domain()': '84b0196e',
    'mint(address,uint256)': '40c10f19',
    'name()': '06fdde03',
    'nonces(address)': '7ecebe00',
    'permit(address,address,uint256,uint256,uint8,bytes32,bytes32)': 'd505accf',
    'symbol()': '95d89b41',
    'totalSupply()': '18160ddd',
    'transfer(address,uint256)': 'a9059cbb',
    'transferFrom(address,address,uint256)': '23b872dd',
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC2612ExpiredSignature(uint256)":[{"details":"Permit deadline has expired."}],"ERC2612InvalidSigner(address,address)":[{"details":"Mismatched signature."}],"InvalidAccountNonce(address,uint256)":[{"details":"The nonce used for an `account` is not the expected current nonce."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"EIP712DomainChanged()":{"details":"MAY be emitted to signal that the domain could have changed."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it\'s overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"eip712Domain()":{"details":"See {IERC-5267}."},"name()":{"details":"Returns the name of the token."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``\'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``\'s tokens, given ``owner``\'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``\'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``\'s tokens of at least `value`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"test/mocks/MockERC20.sol":"MockERC20"},"evmVersion":"cancun","libraries":{},"metadata":{"bytecodeHash":"none"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@layerzerolabs/=node_modules/@layerzerolabs/",":@nomad-xyz/excessively-safe-call/=node_modules/@nomad-xyz/excessively-safe-call/",":@openzeppelin/=node_modules/@openzeppelin/",":ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/",":forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/",":solidity-bytes-utils/=node_modules/solidity-bytes-utils/"]},"sources":{"node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol":{"keccak256":"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92","license":"MIT","urls":["bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a","dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"]},"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b","license":"MIT","urls":["bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b","dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"]},"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368","license":"MIT","urls":["bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171","dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib"]},"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7","license":"MIT","urls":["bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db","dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"]},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"keccak256":"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3","license":"MIT","urls":["bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c","dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD"]},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330","license":"MIT","urls":["bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf","dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"]},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6","license":"MIT","urls":["bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3","dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG"]},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","license":"MIT","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"]},"node_modules/@openzeppelin/contracts/utils/Nonces.sol":{"keccak256":"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f","license":"MIT","urls":["bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e","dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"]},"node_modules/@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","license":"MIT","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"]},"node_modules/@openzeppelin/contracts/utils/ShortStrings.sol":{"keccak256":"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549","license":"MIT","urls":["bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a","dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK"]},"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","license":"MIT","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"]},"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c","license":"MIT","urls":["bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251","dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d"]},"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","license":"MIT","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"]},"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"keccak256":"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d","license":"MIT","urls":["bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c","dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p"]},"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575","license":"MIT","urls":["bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e","dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"]},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","license":"MIT","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"]},"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","license":"MIT","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"]},"test/mocks/MockERC20.sol":{"keccak256":"0x1ed86ca5ef128d07e2ef5ebde9f1ec689ea7cdad6a26497b492d5f24269c9503","license":"BUSL-1.1","urls":["bzz-raw://844fe46b96079c60b76025fa323e5951108a7882c4c8a08c7a51087f8183c2e2","dweb:/ipfs/QmbBCQQy8WCG5TxjTjdKB1sBsoWzUkJ5PiDFe1Hspvcb3S"]}},"version":1}',
  metadata: {
    compiler: {
      version: '0.8.24+commit.e11b9ed9',
    },
    language: 'Solidity',
    output: {
      abi: [
        {
          inputs: [
            {
              internalType: 'string',
              name: 'name',
              type: 'string',
            },
            {
              internalType: 'string',
              name: 'symbol',
              type: 'string',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'constructor',
        },
        {
          inputs: [],
          type: 'error',
          name: 'ECDSAInvalidSignature',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'length',
              type: 'uint256',
            },
          ],
          type: 'error',
          name: 'ECDSAInvalidSignatureLength',
        },
        {
          inputs: [
            {
              internalType: 'bytes32',
              name: 's',
              type: 'bytes32',
            },
          ],
          type: 'error',
          name: 'ECDSAInvalidSignatureS',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'spender',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'allowance',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'needed',
              type: 'uint256',
            },
          ],
          type: 'error',
          name: 'ERC20InsufficientAllowance',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'sender',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'balance',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'needed',
              type: 'uint256',
            },
          ],
          type: 'error',
          name: 'ERC20InsufficientBalance',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'approver',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC20InvalidApprover',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'receiver',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC20InvalidReceiver',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'sender',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC20InvalidSender',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'spender',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC20InvalidSpender',
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'deadline',
              type: 'uint256',
            },
          ],
          type: 'error',
          name: 'ERC2612ExpiredSignature',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'signer',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
          ],
          type: 'error',
          name: 'ERC2612InvalidSigner',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'account',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'currentNonce',
              type: 'uint256',
            },
          ],
          type: 'error',
          name: 'InvalidAccountNonce',
        },
        {
          inputs: [],
          type: 'error',
          name: 'InvalidShortString',
        },
        {
          inputs: [
            {
              internalType: 'string',
              name: 'str',
              type: 'string',
            },
          ],
          type: 'error',
          name: 'StringTooLong',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'spender',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'value',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'Approval',
          anonymous: false,
        },
        {
          inputs: [],
          type: 'event',
          name: 'EIP712DomainChanged',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'value',
              type: 'uint256',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'Transfer',
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'DOMAIN_SEPARATOR',
          outputs: [
            {
              internalType: 'bytes32',
              name: '',
              type: 'bytes32',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'pure',
          type: 'function',
          name: 'PERMIT_TYPEHASH',
          outputs: [
            {
              internalType: 'bytes32',
              name: '',
              type: 'bytes32',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'spender',
              type: 'address',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'allowance',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'spender',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'value',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'approve',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'account',
              type: 'address',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'balanceOf',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'decimals',
          outputs: [
            {
              internalType: 'uint8',
              name: '',
              type: 'uint8',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'eip712Domain',
          outputs: [
            {
              internalType: 'bytes1',
              name: 'fields',
              type: 'bytes1',
            },
            {
              internalType: 'string',
              name: 'name',
              type: 'string',
            },
            {
              internalType: 'string',
              name: 'version',
              type: 'string',
            },
            {
              internalType: 'uint256',
              name: 'chainId',
              type: 'uint256',
            },
            {
              internalType: 'address',
              name: 'verifyingContract',
              type: 'address',
            },
            {
              internalType: 'bytes32',
              name: 'salt',
              type: 'bytes32',
            },
            {
              internalType: 'uint256[]',
              name: 'extensions',
              type: 'uint256[]',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'amount',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'mint',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'name',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'nonces',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'spender',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'value',
              type: 'uint256',
            },
            {
              internalType: 'uint256',
              name: 'deadline',
              type: 'uint256',
            },
            {
              internalType: 'uint8',
              name: 'v',
              type: 'uint8',
            },
            {
              internalType: 'bytes32',
              name: 'r',
              type: 'bytes32',
            },
            {
              internalType: 'bytes32',
              name: 's',
              type: 'bytes32',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'permit',
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'symbol',
          outputs: [
            {
              internalType: 'string',
              name: '',
              type: 'string',
            },
          ],
        },
        {
          inputs: [],
          stateMutability: 'view',
          type: 'function',
          name: 'totalSupply',
          outputs: [
            {
              internalType: 'uint256',
              name: '',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'value',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'transfer',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'value',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'transferFrom',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
      ],
      devdoc: {
        kind: 'dev',
        methods: {
          'DOMAIN_SEPARATOR()': {
            details:
              'Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.',
          },
          'allowance(address,address)': {
            details: 'See {IERC20-allowance}.',
          },
          'approve(address,uint256)': {
            details:
              'See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.',
          },
          'balanceOf(address)': {
            details: 'See {IERC20-balanceOf}.',
          },
          'decimals()': {
            details:
              "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
          },
          'eip712Domain()': {
            details: 'See {IERC-5267}.',
          },
          'name()': {
            details: 'Returns the name of the token.',
          },
          'nonces(address)': {
            details:
              "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.",
          },
          'permit(address,address,uint256,uint256,uint8,bytes32,bytes32)': {
            details:
              "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.",
          },
          'symbol()': {
            details:
              'Returns the symbol of the token, usually a shorter version of the name.',
          },
          'totalSupply()': {
            details: 'See {IERC20-totalSupply}.',
          },
          'transfer(address,uint256)': {
            details:
              'See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.',
          },
          'transferFrom(address,address,uint256)': {
            details:
              "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.",
          },
        },
        version: 1,
      },
      userdoc: {
        kind: 'user',
        methods: {},
        version: 1,
      },
    },
    settings: {
      remappings: [
        '@layerzerolabs/=node_modules/@layerzerolabs/',
        '@nomad-xyz/excessively-safe-call/=node_modules/@nomad-xyz/excessively-safe-call/',
        '@openzeppelin/=node_modules/@openzeppelin/',
        'ds-test/=node_modules/@layerzerolabs/toolbox-foundry/lib/ds-test/',
        'forge-std/=node_modules/@layerzerolabs/toolbox-foundry/lib/forge-std/',
        'solidity-bytes-utils/=node_modules/solidity-bytes-utils/',
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: 'none',
      },
      compilationTarget: {
        'test/mocks/MockERC20.sol': 'MockERC20',
      },
      evmVersion: 'cancun',
      libraries: {},
    },
    sources: {
      'node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol': {
        keccak256:
          '0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92',
        urls: [
          'bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a',
          'dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol': {
        keccak256:
          '0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b',
        urls: [
          'bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b',
          'dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol': {
        keccak256:
          '0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368',
        urls: [
          'bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171',
          'dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol': {
        keccak256:
          '0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7',
        urls: [
          'bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db',
          'dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol':
        {
          keccak256:
            '0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3',
          urls: [
            'bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c',
            'dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD',
          ],
          license: 'MIT',
        },
      'node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol':
        {
          keccak256:
            '0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330',
          urls: [
            'bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf',
            'dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r',
          ],
          license: 'MIT',
        },
      'node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol':
        {
          keccak256:
            '0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6',
          urls: [
            'bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3',
            'dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG',
          ],
          license: 'MIT',
        },
      'node_modules/@openzeppelin/contracts/utils/Context.sol': {
        keccak256:
          '0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2',
        urls: [
          'bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12',
          'dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/Nonces.sol': {
        keccak256:
          '0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f',
        urls: [
          'bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e',
          'dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/Panic.sol': {
        keccak256:
          '0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a',
        urls: [
          'bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a',
          'dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/ShortStrings.sol': {
        keccak256:
          '0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549',
        urls: [
          'bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a',
          'dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/StorageSlot.sol': {
        keccak256:
          '0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97',
        urls: [
          'bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b',
          'dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/Strings.sol': {
        keccak256:
          '0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c',
        urls: [
          'bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251',
          'dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol': {
        keccak256:
          '0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84',
        urls: [
          'bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9',
          'dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol': {
        keccak256:
          '0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d',
        urls: [
          'bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c',
          'dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol':
        {
          keccak256:
            '0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575',
          urls: [
            'bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e',
            'dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs',
          ],
          license: 'MIT',
        },
      'node_modules/@openzeppelin/contracts/utils/math/Math.sol': {
        keccak256:
          '0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea',
        urls: [
          'bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d',
          'dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol': {
        keccak256:
          '0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54',
        urls: [
          'bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8',
          'dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy',
        ],
        license: 'MIT',
      },
      'node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol': {
        keccak256:
          '0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3',
        urls: [
          'bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03',
          'dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ',
        ],
        license: 'MIT',
      },
      'test/mocks/MockERC20.sol': {
        keccak256:
          '0x1ed86ca5ef128d07e2ef5ebde9f1ec689ea7cdad6a26497b492d5f24269c9503',
        urls: [
          'bzz-raw://844fe46b96079c60b76025fa323e5951108a7882c4c8a08c7a51087f8183c2e2',
          'dweb:/ipfs/QmbBCQQy8WCG5TxjTjdKB1sBsoWzUkJ5PiDFe1Hspvcb3S',
        ],
        license: 'BUSL-1.1',
      },
    },
    version: 1,
  },
  id: 172,
} as const;
